* Leetcode: Find the Closest Palindrome                           :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     palindrome, string, greedy, redo
:END:
---------------------------------------------------------------------
Find the Closest Palindrome
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/string-transforms-into-another-string"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-palindrome][#palindrome]], [[https://code.dennyzhang.com/review-string][#string]], [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
Given an integer n, find the closest integer (not including itself), which is a palindrome.

The 'closest' is defined as absolute difference minimized between two integers.
#+BEGIN_EXAMPLE
Example 1:
Input: "123"
Output: "121"
#+END_EXAMPLE

Note:
1. The input n is a positive integer represented by string, whose length will not exceed 18.
- If there is a tie, return the smaller one as answer.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/find-the-closest-palindrome][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/find-the-closest-palindrome/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/find-the-closest-palindrome
## Basic Ideas
##   Identity all the candiates
##
##   Length smaller by one: 999
##   The same length: ..Y.., ..(Y-1).., ..(Y+1)..
##   Length greater by one: 1001
##
## Complexity: Time ?, Space ?
class Solution:
    def nearestPalindromic(self, n: str) -> str:
        cnt = len(n)
        # 10..01, 9..9
        candidates = [str(10**cnt+1), str(10**(cnt-1)-1)]
        left = int(n[:int((cnt+1)/2)])
        for v in [left, left+1, left-1]:
            # even
            if cnt%2 == 0:
                candidates.append(str(v)+str(v)[::-1])
            else:
                candidates.append(str(v)+str(v)[:-1][::-1])
        def delta(s):
            return abs(int(s)-int(n))
        
        res = None
        for c in candidates:
            # skip itself
            if c == n: continue
            if not res: res = c
            # find a better candidate
            if delta(c) < delta(res):
                res = c
            elif delta(c) == delta(res) and int(c)<int(res):
                # find a tie
                res = c
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
