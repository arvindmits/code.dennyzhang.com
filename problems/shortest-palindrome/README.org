* Leetcode: Shortest Palindrome                                              :BLOG:Hard:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     palindrome, kmp
:END:
---------------------------------------------------------------------
Shortest Palindrome
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-palindrome"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-palindrome][#palindrome]], [[https://code.dennyzhang.com/followup-kmp][#kmp]]
---------------------------------------------------------------------
Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.

For example:
#+BEGIN_EXAMPLE
Given "aacecaaa", return "aaacecaaa".

Given "abcd", return "dcbabcd".
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-palindrome][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/shortest-palindrome/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/shortest-palindrome
## Basic Ideas: Treat each character as the middle.
##              The length of palindrome might be odd or even
##
## Complexity: Time O(n^2), Space O(1)
import sys
class Solution:
    def shortestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        length = len(s)
        if length <= 1: return s
        minCnt = sys.maxsize
        # the length of target palindrome is odd
        for i in range(0, int((length+1)/2)):
            has_failed = False
            for k in range(1, i+1):
                if s[i-k] != s[i+k]:
                    has_failed = True
                    break
            if has_failed is False:
                minCnt = min(minCnt, (length-i-1)*2+1)

        # the length of target palindrome is even
        for i in range(0, int(length/2)):
            has_failed = False
            if s[i] == s[i+1]:
                for k in range(1, i+1):
                    if s[i-k] != s[i+k+1]:
                        has_failed = True
                        break
                if has_failed is False:
                    minCnt = min(minCnt, (length-i-2)*2+2)

        res = ''
        index = length-1
        for i in range(0, minCnt-length):
            res = "%s%s" % (res, s[index])
            index -= 1
        # print(res, minCnt, length)
        # get the result
        return res+s

# s = Solution()
# print(s.shortestPalindrome("aacecaaa")) # "aaacecaaa"
# print(s.shortestPalindrome("abcd")) # "dcbabcd"
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
